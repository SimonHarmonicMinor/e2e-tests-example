name: Java CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: gain-service:build api-service:build
  docker-images:
    needs:
      - build
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.env.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set env BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: Define images tags
        id: env
        run: |
          if [[ $BRANCH == 'master' ]]; then
              echo "IMAGE_TAG=latest" >> "$GITHUB_ENV"
              export IMAGE_TAG=latest
          else
              echo "IMAGE_TAG=dev-${{ github.run_number }}" >> "$GITHUB_ENV"
              export IMAGE_TAG=dev-${{ github.run_number }}
          fi
          echo "::set-output name=image_tag::$IMAGE_TAG"
      - name: Build and push E2E-tests
        uses: docker/build-push-action@v3
        with:
          file: "./Dockerfile_e2e_tests"
          push: true
          tags: kirekov/e2e-tests:${{ env.IMAGE_TAG }}
      - name: Build and push API-Service
        uses: docker/build-push-action@v3
        with:
          file: "./Dockerfile_api_service"
          push: true
          tags: kirekov/api-service:${{ env.IMAGE_TAG }}
      - name: Build and push Gain-Service
        uses: docker/build-push-action@v3
        with:
          file: "./Dockerfile_gain_service"
          push: true
          tags: kirekov/gain-service:${{ env.IMAGE_TAG }}
  e2e-tests:
    needs:
      - docker-images
    runs-on: ubuntu-latest
    container:
      image: kirekov/e2e-tests:${{needs.docker-images.outputs.image_tag}}
    steps:
      - name: Run E2E-tests
        run: |
          export IMAGE_GAIN_SERVICE=kirekov/gain-service:${{needs.docker-images.outputs.image_tag}}
          export IMAGE_API_SERVICE=kirekov/gain-service:${{needs.docker-images.outputs.image_tag}}
          /app/gradlew :e2e-tests:test
